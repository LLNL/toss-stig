# https://www.stigviewer.com/stig/tri-lab_operating_system_stack_toss_4/2022-08-29/finding/V-253070

# If the device or operating system does not have a camera installed,
# this requirement is Not Applicable. This requirement is not applicable to mobile
# devices (smartphones and tablets), where the use of the camera is a local AO
# decision. This requirement is not applicable to dedicated VTC suites located in
# approved VTC locations that are centrally managed. For an external camera, if
# there is not a method for the operator to manually disconnect the camera at the
# end of collaborative computing sessions, this is a finding. For a built-in
# camera, the camera must be protected by a camera cover (e.g., laptop camera
# cover slide) when not in use. If the built-in camera is not protected with a
# camera cover, or is not physically disabled, this is a finding. If the camera is
# not disconnected, covered, or physically disabled, determine if it is being
# disabled via software with the following commands: Determine if the camera is
# disabled via blacklist with the following command: $ sudo grep blacklist
# /etc/modprobe.d/* /etc/modprobe.d/blacklist.conf:blacklist uvcvideo Determine if
# a camera driver is in use with the following command: $ sudo dmesg | grep -i
# video [ 44.630131] ACPI: Video Device [VGA] [ 46.655714] input: Video Bus as
# /devices/LNXSYSTM:00/LNXSYBUS:00/LNXVIDEO:00/input/input7 [ 46.670133] videodev:
# Linux video capture interface: v2.00 [ 47.226424] uvcvideo: Found UVC 1.00
# device WebCam (0402:7675) [ 47.235752] usbcore: registered new interface driver
# uvcvideo [ 47.235756] USB Video Class driver (1.1.1) If the camera driver
# blacklist is missing, a camera driver is determined to be in use, and the
# collaborative computing device has not been authorized for use, this is a
# finding.


- name: TOSS-04-040150 - TOSS must cover or disable the built-in or attached camera when not in use.
  block:
    - name: TOSS-04-040150 - Determine if the camera is disabled via blacklist
      ansible.builtin.command: grep -P '^blacklist[\s,\S]*video' {{ item }}
      check_mode: false
      changed_when: false
      failed_when: blacklists.rc not in [0,1]
      register: blacklists
      with_fileglob:
        - "/etc/modprobe.d/*"
    - name: TOSS-04-040150 - Display all blacklisted drivers
      ansible.builtin.debug:
        var: blacklists.stdout_lines
        verbosity: 1
    - name: TOSS-04-040150 - Determine the driver being used by the camera
      ansible.builtin.command: "dmesg | grep -i video"
      check_mode: false
      changed_when: false
      failed_when: drivers.rc not in [0,1]
      register: drivers
    - name: TOSS-04-040150 - Display all video drivers, if the camera driver blacklist is missing, add it to the "/etc/modprobe.d/blacklist.conf" file
      ansible.builtin.debug:
        var: drivers.stdout_lines
        verbosity: 1
  when:
    - toss_04_040150 | bool
  tags:
    - V-253070
    - SRG-OS-000095-GPOS-00049
    - TOSS-04-040150
    - DISA-STIG-TOSS-04-040150
    - medium_severity
    - CCI-000381
    - manual
    - hpc_issue
